#!/usr/bin/env python
# -*- encoding: utf-8 -*-

import argparse;
import numpy as np;
import sys;
import basicstats;


if __name__ == '__main__':
	# Parse command line arguments
	parser = argparse.ArgumentParser(prog='basicstats', add_help=True,
	                                 usage='%(prog)s [OPTION]... FILE...',
	                                 description='Calculate basic statistics for each column',
	                                 epilog='If a FILE is \'-\', read standard input.',
	                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter);
	parser.add_argument('-a', '--axis', action='store', default=0, type=int, metavar='AXIS',
	                    help='Axis number along which the statistics are computed');
	parser.add_argument('-d', '--delimiter', action='store', default=' ', type=str, metavar='DELIM',
	                    help='String or character which separates columns');
	parser.add_argument('-f', '--format', action='store', default='%.18e', type=str, metavar='FMT',
	                    help='String which specifies the output format');
	parser.add_argument('files', action='store', nargs='*', type=str, metavar='FILE',
	                    help='Input files path');
	args = parser.parse_args();

	# Set stdin and stdout stream
	if sys.version_info[0] == 2:
		stdin = sys.stdin;
		stdout = sys.stdout;
	elif sys.version_info[0] == 3:
		stdin = sys.stdin.buffer;
		stdout = sys.stdout.buffer;
	else:
		raise EnvironmentError('Python major version must be 2 or 3; not {0}'.format(sys.version_info[0]));

	# Set a function to write to stdout
	if args.axis == 0:
		func_write = basicstats.__write_each_row;
	elif args.axis == 1:
		func_write = basicstats.__write_each_col;
	else:
		raise ValueError('axis must be 0 or 1; passed {0}'.format(args.axis));

	# Add stdin identifier if there is no file and stdin is not a tty
	if len(args.files) == 0:
		if sys.stdin.isatty():
			raise RuntimeError('Requires 1 argument at least.');
		else:
			args.files.append('-');

	# Perform each file
	labels = ('min', 'mean', 'max', 'sum', 'psd', 'ssd');
	for fp in args.files:
		x = np.genfromtxt(stdin if fp == '-' else fp, delimiter=args.delimiter);
		func_write(stdout, basicstats.calc(x, args.axis), labels, args.format);
